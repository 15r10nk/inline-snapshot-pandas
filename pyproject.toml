[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[project]
authors = [
  {name = "Frank Hoffmann", email = "15r10nk@polarbit.de"}
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy"
]
dependencies = [
  "pandas",
  "inline-snapshot>=0.12.0"
]
description = 'pandas integration for inline-snapshot'
keywords = []
license = "MIT"
name = "inline-snapshot-pandas"
readme = "README.md"
requires-python = ">=3.8"
version = "0.1.0"

[project.urls]
Documentation = "https://github.com/15r10nk/inline-snapshot-pandas#readme"
Issues = "https://github.com/15r10nk/inline-snapshot-pandas/issues"
Source = "https://github.com/15r10nk/inline-snapshot-pandas"

[tool.black]
target-version = ["py38"]

[tool.commitizen]
changelog_incremental = true
major_version_zero = true
tag_format = "v$major.$minor.$patch$prerelease"
update_changelog_on_bump = true
version_files = [
  "src/inline_snapshot_pandas/__init__.py:version"
]
version_provider = "pep621"

[tool.coverage.paths]
inline_snapshot_pandas = ["src/inline_snapshot_pandas", "*/inline-snapshot-pandas/src/inline_snapshot_pandas"]
tests = ["tests", "*/inline-snapshot-pandas/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:"
]

[tool.coverage.run]
branch = true
data_file = "$TOP/.coverage"
omit = [
  "src/inline_snapshot_pandas/__about__.py"
]
parallel = true
source_pkgs = ["inline_snapshot_pandas", "tests"]

[tool.hatch.envs.docs]
dependencies = [
  "mkdocs>=1.4.2",
  "mkdocs-material[imaging]>=8.5.10",
  "mkdocstrings>=0.19.0"
]
scripts.serve = ["mkdocs serve {args}"]

[tool.hatch.envs.hatch-test]
extra-dependencies = []
env-vars.TOP = "{root}"

[tool.hatch.envs.hatch-test.scripts]
cov-combine = "coverage combine"
cov-report = [
  "coverage html",
  "coverage report --fail-under 100"
]
run = "pytest{env:HATCH_TEST_ARGS:} {args}"
run-cov = "coverage run -m pytest{env:HATCH_TEST_ARGS:} {args}"

[tool.hatch.version]
path = "src/inline_snapshot_pandas/__init__.py"
